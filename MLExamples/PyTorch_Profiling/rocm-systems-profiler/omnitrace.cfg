# auto-generated by omnitrace-avail (version 1.11.2) on 2024-09-30 @ 19:45


# name:
#    config_file
#
# description:
#    Configuration file for omnitrace
#

OMNITRACE_CONFIG_FILE                              = 

# name:
#    trace
#
# description:
#    Enable perfetto backend
#

OMNITRACE_TRACE                                    = true

# name:
#    trace_delay
#
# description:
#    Time in seconds to wait before
#    enabling trace/profile data
#    collection. If multiple delays +
#    durations are needed, see
#    OMNITRACE_TRACE_PERIODS.
#

OMNITRACE_TRACE_DELAY                              = 0

# name:
#    trace_duration
#
# description:
#    If > 0.0, time (in seconds) to
#    collect trace/profile data. If
#    multiple delays + durations are
#    needed, see
#    OMNITRACE_TRACE_PERIODS.
#

OMNITRACE_TRACE_DURATION                           = 0

# name:
#    trace_period_clock_id
#
# description:
#    Set the default clock ID for
#    OMNITRACE_TRACE_DELAY,
#    OMNITRACE_TRACE_DURATION, and/or
#    OMNITRACE_TRACE_PERIODS. E.g.
#    "realtime" == the delay/duration
#    is governed by the elapsed
#    realtime, "cputime" == the
#    delay/duration is governed by the
#    elapsed CPU-time within the
#    process, etc. Note: when using
#    CPU-based timing, it is recommened
#    to scale the value by the number
#    of threads and be aware that
#    omnitrace may contribute to
#    advancing the process CPU-time
#

OMNITRACE_TRACE_PERIOD_CLOCK_ID                    = CLOCK_REALTIME

# name:
#    trace_periods
#
# description:
#    Similar to specify trace delay
#    and/or duration except in the form
#    <DELAY>:<DURATION>,
#    <DELAY>:<DURATION>:<REPEAT>,
#    and/or
#    <DELAY>:<DURATION>:<REPEAT>:<CLOCK_ID>
#

OMNITRACE_TRACE_PERIODS                            = 

# name:
#    profile
#
# description:
#    Enable timemory backend
#

OMNITRACE_PROFILE                                  = false

# name:
#    use_sampling
#
# description:
#    Enable statistical sampling of
#    call-stack
#

OMNITRACE_USE_SAMPLING                             = false

# name:
#    use_process_sampling
#
# description:
#    Enable a background thread which
#    samples process-level and system
#    metrics such as the CPU/GPU freq,
#    power, memory usage, etc.
#

OMNITRACE_USE_PROCESS_SAMPLING                     = true

# name:
#    use_roctracer
#
# description:
#    Enable ROCm API and kernel tracing
#

OMNITRACE_USE_ROCTRACER                            = true

# name:
#    use_rocm_smi
#
# description:
#    Enable sampling GPU power, temp,
#    utilization, and memory usage
#

OMNITRACE_USE_ROCM_SMI                             = true

# name:
#    use_kokkosp
#
# description:
#    Enable support for Kokkos Tools
#

OMNITRACE_USE_KOKKOSP                              = false

# name:
#    use_causal
#
# description:
#    Enable causal profiling analysis
#

OMNITRACE_USE_CAUSAL                               = false

# name:
#    use_mpip
#
# description:
#    Enable support for MPI functions
#

OMNITRACE_USE_MPIP                                 = true

# name:
#    use_pid
#
# description:
#    Enable tagging filenames with
#    process identifier (either MPI
#    rank or pid)
#

OMNITRACE_USE_PID                                  = true

# name:
#    use_rcclp
#
# description:
#    Enable support for ROCm
#    Communication Collectives Library
#    (RCCL) Performance
#

OMNITRACE_USE_RCCLP                                = false

# name:
#    use_rocprofiler
#
# description:
#    Enable ROCm hardware counters
#

OMNITRACE_USE_ROCPROFILER                          = false

# name:
#    use_roctx
#
# description:
#    Enable ROCtx API. Warning!
#    Out-of-order ranges may corrupt
#    perfetto flamegraph
#

OMNITRACE_USE_ROCTX                                = false

# name:
#    output_path
#
# description:
#    Explicitly specify the output
#    folder for results
#

OMNITRACE_OUTPUT_PATH                              = omnitrace-%tag%-output

# name:
#    output_prefix
#
# description:
#    Explicitly specify a prefix for
#    all output files
#

OMNITRACE_OUTPUT_PREFIX                            = 

# name:
#    causal_backend
#
# description:
#    Backend for call-stack sampling.
#    See
#    https://rocm.github.io/omnitrace/causal_profiling.html#backends
#    for more info. If set to "auto",
#    omnitrace will attempt to use the
#    perf backend and fallback on the
#    timer backend if unavailable
#

OMNITRACE_CAUSAL_BACKEND                           = auto

# name:
#    causal_binary_exclude
#
# description:
#    Excludes binaries matching the
#    list of provided regexes from
#    causal experiments (separated by
#    tab, semi-colon, and/or quotes
#    (single or double))
#

OMNITRACE_CAUSAL_BINARY_EXCLUDE                    = 

# name:
#    causal_binary_scope
#
# description:
#    Limits causal experiments to the
#    binaries matching the provided
#    list of regular expressions
#    (separated by tab, semi-colon,
#    and/or quotes (single or double))
#

OMNITRACE_CAUSAL_BINARY_SCOPE                      = %MAIN%

# name:
#    causal_delay
#
# description:
#    Length of time to wait (in
#    seconds) before starting the first
#    causal experiment
#

OMNITRACE_CAUSAL_DELAY                             = 0

# name:
#    causal_duration
#
# description:
#    Length of time to perform causal
#    experimentation (in seconds) after
#    the first experiment has started.
#    After this amount of time has
#    elapsed, no more causal
#    experiments will be performed and
#    the application will continue
#    without any overhead from causal
#    profiling. Any value <= 0 means
#    until the application completes
#

OMNITRACE_CAUSAL_DURATION                          = 0

# name:
#    causal_function_exclude
#
# description:
#    Excludes functions matching the
#    list of provided regexes from
#    causal experiments (separated by
#    tab, semi-colon, and/or quotes
#    (single or double))
#

OMNITRACE_CAUSAL_FUNCTION_EXCLUDE                  = 

# name:
#    causal_function_scope
#
# description:
#    List of <function> regex entries
#    for causal profiling (separated by
#    tab, semi-colon, and/or quotes
#    (single or double))
#

OMNITRACE_CAUSAL_FUNCTION_SCOPE                    = 

# name:
#    causal_mode
#
# description:
#    Perform causal experiments at the
#    function-scope or line-scope.
#    Ideally, use function first to
#    locate function with highest
#    impact and then switch to line
#    mode +
#    OMNITRACE_CAUSAL_FUNCTION_SCOPE
#    set to the function being
#    targeted.
#

OMNITRACE_CAUSAL_MODE                              = function

# name:
#    causal_random_seed
#
# description:
#    Seed for random number generator
#    which selects speedups and
#    experiments -- please note that
#    the lines selected for
#    experimentation are not
#    reproducible but the speedup
#    selection is. If set to zero,
#    std::random_device{}() will be
#    used.
#

OMNITRACE_CAUSAL_RANDOM_SEED                       = 0

# name:
#    causal_source_exclude
#
# description:
#    Excludes source files or source
#    file + lineno pair (i.e. <file> or
#    <file>:<line>) matching the list
#    of provided regexes from causal
#    experiments (separated by tab,
#    semi-colon, and/or quotes (single
#    or double))
#

OMNITRACE_CAUSAL_SOURCE_EXCLUDE                    = 

# name:
#    causal_source_scope
#
# description:
#    Limits causal experiments to the
#    source files or source file +
#    lineno pair (i.e. <file> or
#    <file>:<line>) matching the
#    provided list of regular
#    expressions (separated by tab,
#    semi-colon, and/or quotes (single
#    or double))
#

OMNITRACE_CAUSAL_SOURCE_SCOPE                      = 

# name:
#    perfetto_backend
#
# description:
#    Specify the perfetto backend to
#    activate. Options are:
#    'inprocess', 'system', or 'all'
#

OMNITRACE_PERFETTO_BACKEND                         = inprocess

# name:
#    perfetto_buffer_size_kb
#
# description:
#    Size of perfetto buffer (in KB)
#

OMNITRACE_PERFETTO_BUFFER_SIZE_KB                  = 1024000

# name:
#    perfetto_fill_policy
#
# description:
#    Behavior when perfetto buffer is
#    full. 'discard' will ignore new
#    entries, 'ring_buffer' will
#    overwrite old entries
#

OMNITRACE_PERFETTO_FILL_POLICY                     = discard

# name:
#    process_sampling_duration
#
# description:
#    If > 0.0, time (in seconds) to
#    sample before stopping. If less
#    than zero, uses
#    OMNITRACE_SAMPLING_DURATION
#

OMNITRACE_PROCESS_SAMPLING_DURATION                = -1

# name:
#    process_sampling_freq
#
# description:
#    Number of measurements per second
#    when
#    OMNITTRACE_USE_PROCESS_SAMPLING=ON.
#    If set to zero, uses
#    OMNITRACE_SAMPLING_FREQ value
#

OMNITRACE_PROCESS_SAMPLING_FREQ                    = 0

# name:
#    rocm_events
#
# description:
#    ROCm hardware counters. Use
#    ':device=N' syntax to specify
#    collection on device number N,
#    e.g. ':device=0'. If no device
#    specification is provided, the
#    event is collected on every
#    available device
#

OMNITRACE_ROCM_EVENTS                              = 

# name:
#    sampling_cpus
#
# description:
#    CPUs to collect frequency
#    information for. Values should be
#    separated by commas and can be
#    explicit or ranges, e.g. 0,1,5-8.
#    An empty value implies 'all' and
#    'none' suppresses all CPU
#    frequency sampling
#

OMNITRACE_SAMPLING_CPUS                            = 

# name:
#    sampling_delay
#
# description:
#    Time (in seconds) to wait before
#    the first sampling signal is
#    delivered, increasing this value
#    can fix deadlocks during init
#

OMNITRACE_SAMPLING_DELAY                           = 0.5

# name:
#    sampling_duration
#
# description:
#    If > 0.0, time (in seconds) to
#    sample before stopping
#

OMNITRACE_SAMPLING_DURATION                        = 0

# name:
#    sampling_freq
#
# description:
#    Number of software interrupts per
#    second when
#    OMNITTRACE_USE_SAMPLING=ON
#

OMNITRACE_SAMPLING_FREQ                            = 300

# name:
#    sampling_gpus
#
# description:
#    Devices to query when
#    OMNITRACE_USE_ROCM_SMI=ON. Values
#    should be separated by commas and
#    can be explicit or ranges, e.g.
#    0,1,5-8. An empty value implies
#    'all' and 'none' suppresses all
#    GPU sampling
#

OMNITRACE_SAMPLING_GPUS                            = all

# name:
#    sampling_overflow_event
#
# description:
#    Metric for overflow sampling
#

OMNITRACE_SAMPLING_OVERFLOW_EVENT                  = perf::PERF_COUNT_HW_CACHE_REFERENCES

# name:
#    time_output
#
# description:
#    Output data to subfolder w/ a
#    timestamp (see also: TIME_FORMAT)
#

OMNITRACE_TIME_OUTPUT                              = true

# name:
#    timemory_components
#
# description:
#    List of components to collect via
#    timemory (see `omnitrace-avail
#    -C`)
#

OMNITRACE_TIMEMORY_COMPONENTS                      = wall_clock

# name:
#    verbose
#
# description:
#    Verbosity level
#

OMNITRACE_VERBOSE                                  = 0

# name:
#    enabled
#
# description:
#    Activation state of timemory
#

OMNITRACE_ENABLED                                  = true

# name:
#    papi_events
#
# description:
#    PAPI presets and events to collect
#    (see also: papi_avail)
#

OMNITRACE_PAPI_EVENTS                              = 

# name:
#    suppress_config
#
# description:
#    Disable processing of setting
#    configuration files
#

OMNITRACE_SUPPRESS_CONFIG                          = false

# name:
#    suppress_parsing
#
# description:
#    Disable parsing environment
#

OMNITRACE_SUPPRESS_PARSING                         = false
